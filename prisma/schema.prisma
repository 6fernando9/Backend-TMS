generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Rol {
  id        Int       @id @default(autoincrement())
  nombre    String    @db.VarChar(20)
  createdAt DateTime  @default(now())  @map("created_at")
  updatedAt DateTime  @updatedAt       @map("updated_at")
  usuarios     Usuario[]
  permisos  Permiso[] @relation("rol_permisos")

  @@map("roles")
}

model Usuario {
  id          Int          @id @default(autoincrement())
  username String         @db.VarChar(50)
  nombre      String      @db.VarChar(50)
  email       String       @unique
  password    String       
  rolId       Int          @map("rol_id")
  profile_icon String?     
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt      @map("updated_at")
  rol         Rol          @relation(fields: [rolId], references: [id])
  chofer      Chofer? 
  cliente     Cliente?
  @@map("usuarios")
}

model Cliente{
  id Int @id @default(autoincrement())  
  telefono String? @db.VarChar(20)
  fechaNacimiento String? @db.VarChar(30) @map("fecha_nacimiento")
  usuarioId Int @unique @map("usuario_id")
  direccion String? @db.VarChar(40)
  usuario Usuario @relation(fields:[usuarioId],references:[id])
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt      @map("updated_at")
  @@map("clientes")
}

model Chofer{
  id Int @id @default(autoincrement())  
  ci String  @db.VarChar(40)
  direccion String @db.VarChar(40)
  estado String @db.VarChar(10)
  usuarioId Int @unique @map("usuario_id")
  usuario Usuario @relation(fields:[usuarioId],references:[id])
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt      @map("updated_at")
  vehiculo Vehiculo?
  @@map("choferes")
}


model Permiso {
  id        Int      @id @default(autoincrement())
  nombre    String   @db.VarChar(20)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt      @map("updated_at")
  roles     Rol[]    @relation("rol_permisos")

  @@map("permisos")
}

model Bitacora_usuario {
  id          Int      @id @default(autoincrement())
  ip          String   @db.VarChar(30)
  tipo_sesion String   @db.VarChar(4)
  username    String   @db.VarChar(50)
  createdAt   DateTime @default(now())   @map("created_at") 
  updatedAt   DateTime @updatedAt        @map("updated_at")
  usuarioId   Int

  @@map("bitacora_usuarios")
}

model Vehiculo{
  id          Int      @id @default(autoincrement())
  
  createdAt   DateTime @default(now())   @map("created_at") 
  updatedAt   DateTime @updatedAt        @map("updated_at")
  choferId  Int @unique @map("chofer_id")  
  chofer Chofer @relation(fields:[choferId],references:[id])
  placa String @db.VarChar(20)
  peso String @db.VarChar(20)
  estado String @db.VarChar(15)
  kilometraje String @db.VarChar(20)
  imagenes Imagen[]
  tipoVehiculoId Int @map("tipo_vehiculo_id")
  tipoVehiculo TipoVehiculo @relation(fields:[tipoVehiculoId],references:[id])
  @@map("vehiculos")
}

model TipoVehiculo{
    id          Int      @id @default(autoincrement())
    nombre String @db.VarChar(20)
    vehiculos Vehiculo[]
  createdAt   DateTime @default(now())   @map("created_at") 
  updatedAt   DateTime @updatedAt        @map("updated_at")
  @@map("tipo_vehiculos")
}


model Imagen{
  id          Int      @id @default(autoincrement())
  nombre String @db.VarChar(20)
  cloudinaryId String @db.VarChar(50)    @map("cloudinary_id")
  createdAt   DateTime @default(now())   @map("created_at") 
  updatedAt   DateTime @updatedAt        @map("updated_at")
  vehiculoId  Int  @map("vehiculo_id")
  vehiculo    Vehiculo @relation(fields:[vehiculoId],references:[id])
  @@map("imagenes")
}
